{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Documents/fullstack/auth/frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n\n  const loginUser = async (username, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history.push(\"/\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const registerUser = async (username, password, password2) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password2\n      })\n    });\n\n    if (response.status === 201) {\n      history.push(\"/login\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history.push(\"/\");\n  };\n\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"m8ywiUZyLbcd3oc6JIgnSXwC3gk=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","loginUser","username","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","history","push","alert","registerUser","password2","logoutUser","removeItem","contextData"],"sources":["/home/patrick/Documents/fullstack/auth/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\n\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  const [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  const [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  const [loading, setLoading] = useState(true);\n\n\n  const loginUser = async (username, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history.push(\"/\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const registerUser = async (username, password, password2) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password2\n      })\n    });\n    if (response.status === 201) {\n      history.push(\"/login\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history.push(\"/\");\n  };\n\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>\n      {loading ? null : children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}